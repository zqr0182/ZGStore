@using ZG.Common.DTO
@model ZG.Store.Presentation.ViewModels.BillingViewModel

@{
    ViewBag.Title = "ZGStore: Billing Address";
}

@Html.Action("CheckoutBreadCrumbs", "ChildAction", new {activeCrumb = "Billing"})

<h2>Choose a billing Address</h2>

@if (!Model.IsShippingAddressEmpty)
{
    using (Html.BeginForm("ReviewOrder", "Checkout", new { useExisting = "shipping" }))
    {
        Html.RenderPartial("Address", Model.ShippingAddress);
        <p>
            <input type="submit" value="Use this address" />
        </p>
    }
}

@if (!Model.IsExistingBillingAddressEmpty)
{
    using (Html.BeginForm("ReviewOrder", "Checkout", new { useExisting = "billing" }))
    {
        Html.RenderPartial("Address", Model.ExistingBillingAddress);
        <p>
            <input type="submit" value="Use this address" />
        </p>
    }
}

<h2>Or enter a new billing address</h2>
@using (Html.BeginForm("ReviewOrder", "Checkout"))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>BillingAddress</legend>
        
        <div class="editor-label">
            @Html.LabelFor(m => m.NewBillingAddress.FullName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.NewBillingAddress.FullName)
            @Html.ValidationMessageFor(m => m.NewBillingAddress.FullName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.NewBillingAddress.Address1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.NewBillingAddress.Address1)
            @Html.ValidationMessageFor(m => m.NewBillingAddress.Address1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.NewBillingAddress.Address2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.NewBillingAddress.Address2)
            @Html.ValidationMessageFor(m => m.NewBillingAddress.Address2)
        </div>        

        <p>Country:
            @Html.Action("Countries", "ChildAction")
        </p>

        <p>State:
            @Html.Action("States", "ChildAction")
        </p>               

        <div class="editor-label">
            @Html.LabelFor(m => m.NewBillingAddress.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.NewBillingAddress.City)
            @Html.ValidationMessageFor(m => m.NewBillingAddress.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(m => m.NewBillingAddress.Zip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.NewBillingAddress.Zip)
            @Html.ValidationMessageFor(m => m.NewBillingAddress.Zip)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(m => m.NewBillingAddress.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.NewBillingAddress.Phone)
            @Html.ValidationMessageFor(m => m.NewBillingAddress.Phone)
        </div>

        <p>
            <input type="submit" value="Continue" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
